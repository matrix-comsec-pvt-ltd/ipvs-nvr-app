#if !defined EVENT_HANDLER_H
#define EVENT_HANDLER_H
//#################################################################################################
// FILE BRIEF
//#################################################################################################
/**
@file		EventHandler.h
@brief      Event handling
*/
//#################################################################################################
// @INCLUDES
//#################################################################################################
/* Application Includes */
#include "ConfigApi.h"
#include "InputOutput.h"
#include "EventLogger.h"

//#################################################################################################
// @PROTOTYPES
//#################################################################################################
//-------------------------------------------------------------------------------------------------
void InitEventHandler(void);
//-------------------------------------------------------------------------------------------------
void DeInitEventHandler(void);
//-------------------------------------------------------------------------------------------------
void CameraEventNotify(UINT8 camIndex, UINT8 eventNo, BOOL camEvntState);
//-------------------------------------------------------------------------------------------------
void SensorEventNotify(UINT8 sensorIndex, BOOL action);
//-------------------------------------------------------------------------------------------------
void EvntHndlrCamEventCfgUpdate(CAMERA_EVENT_CONFIG_t newCfg, CAMERA_EVENT_CONFIG_t *oldCfg, UINT8 camIndex, UINT8 camEventIndex);
//-------------------------------------------------------------------------------------------------
void EvntHndlrSensorEventCfgUpdate(SENSOR_EVENT_CONFIG_t newCfg, SENSOR_EVENT_CONFIG_t *oldCfg, UINT8 sensorIndex);
//-------------------------------------------------------------------------------------------------
void EvntHndlrSystemEventCfgUpdate(SYSTEM_EVENT_CONFIG_t newCfg, SYSTEM_EVENT_CONFIG_t *oldCfg, UINT8 systemIndex);
//-------------------------------------------------------------------------------------------------
void HarDiskFull(UINT8 action);
//-------------------------------------------------------------------------------------------------
void StorageAlert(UINT8 action);
//-------------------------------------------------------------------------------------------------
void DiskFaultEvent(UINT8 action);
//-------------------------------------------------------------------------------------------------
NET_CMD_STATUS_e ManualTrigger(UINT8 action);
//-------------------------------------------------------------------------------------------------
BOOL GetManTriggerStatus(UINT8 temp1, UINT8 temp2);
//-------------------------------------------------------------------------------------------------
void OnBootEvent(UINT8 action);
//-------------------------------------------------------------------------------------------------
void FirmwareUpgradeEvent(UINT8 action);
//-------------------------------------------------------------------------------------------------
void TakeScheduleBackupFailSystemAction(UINT8 action);
//-------------------------------------------------------------------------------------------------
BOOL CheckEventTimeWindow(WEEKLY_ACTION_SCHEDULE_t *weekAction, ACTION_BIT_u *actionField, struct tm *brokenTimePtr);
//-------------------------------------------------------------------------------------------------
//#################################################################################################
// @END OF FILE
//#################################################################################################
#endif  // EVENT_HANDLER_H
