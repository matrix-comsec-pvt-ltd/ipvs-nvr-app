#ifndef ETHERNET_H_
#define ETHERNET_H_
//#################################################################################################
// FILE BRIEF
//#################################################################################################
/**
@file		NetworkController.h
@brief      This file provides API to configure and manage ethernet ports as per NVR configurations
*/
//#################################################################################################
// @INCLUDES
//#################################################################################################
/* Application Includes */
#include "ConfigApi.h"
#include "DebugLog.h"
#include "NetworkManager.h"

//#################################################################################################
// @DATA TYPES
//#################################################################################################
#define LAN_LINK_STATUS_UP      0
#define LAN_LINK_STATUS_DOWN    1

//#################################################################################################
// @PROTOTYPES
//#################################################################################################
//-------------------------------------------------------------------------------------------------
void InitNetworkController(void);
//-------------------------------------------------------------------------------------------------
void DeInitNetworkController(void);
//-------------------------------------------------------------------------------------------------
const CHAR *GetLanPortName(LAN_CONFIG_ID_e lanId);
//-------------------------------------------------------------------------------------------------
BOOL GetMacAddr(LAN_CONFIG_ID_e lanId, CHARPTR macAddrStr);
//-------------------------------------------------------------------------------------------------
BOOL GetMacAddrPrepare(LAN_CONFIG_ID_e lanId, CHARPTR macAddrStr);
//-------------------------------------------------------------------------------------------------
BOOL GetRawMacAddrStr(LAN_CONFIG_ID_e lanId, CHARPTR rawMacAddrStr);
//-------------------------------------------------------------------------------------------------
BOOL UpdateLanConfig(LAN_CONFIG_ID_e lanId, LAN_CONFIG_t newLanConfig, LAN_CONFIG_t *oldLanConfig);
//-------------------------------------------------------------------------------------------------
BOOL UpdateStaticRouting(STATIC_ROUTING_CONFIG_t newCopy, STATIC_ROUTING_CONFIG_t *oldCopy);
//-------------------------------------------------------------------------------------------------
NET_CMD_STATUS_e ValidateLanConfig(LAN_CONFIG_ID_e lanId, LAN_CONFIG_t newLanConfig);
//-------------------------------------------------------------------------------------------------
NET_CMD_STATUS_e ValidateStaticRoutingCfg(STATIC_ROUTING_CONFIG_t newCfg);
//-------------------------------------------------------------------------------------------------
BOOL IsNetworkPortLinkUp(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
BOOL GetNetworkPortLinkStatus(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void SetNetworkPortLinkStatus(NETWORK_PORT_e portType, BOOL status);
//-------------------------------------------------------------------------------------------------
BOOL GetNetworkParamInfo(NETWORK_PORT_e portType, LAN_CONFIG_t *networkInfo);
//-------------------------------------------------------------------------------------------------
BOOL IsIpv6Enabled();
//-------------------------------------------------------------------------------------------------
void OnPhyLinkUp(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnPhyLinkDown(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv4DhcpDeconfig(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv4DhcpLeaseFail(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv4DhcpBound(NETWORK_PORT_e portType, IPV4_LAN_CONFIG_t *ipv4DhcpAddr);
//-------------------------------------------------------------------------------------------------
void OnIpv4DhcpRenew(NETWORK_PORT_e portType, IPV4_LAN_CONFIG_t *ipv4DhcpAddr);
//-------------------------------------------------------------------------------------------------
void OnIpv4PppoeIpUp(NETWORK_PORT_e portType, IPV4_LAN_CONFIG_t *ipv4PppoeAddr);
//-------------------------------------------------------------------------------------------------
void OnIpv4PppoeIpDown(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6AddrSuccess(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6AddrDadFail(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6DhcpStarted(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6DhcpUnbound(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6DhcpBoundOrRebound(NETWORK_PORT_e portType, IPV6_LAN_CONFIG_t *ipv6AddrInfo);
//-------------------------------------------------------------------------------------------------
void OnIpv6DhcpUpdated(NETWORK_PORT_e portType, IPV6_LAN_CONFIG_t *ipv6AddrInfo);
//-------------------------------------------------------------------------------------------------
void OnIpv6SlaacStarted(NETWORK_PORT_e portType);
//-------------------------------------------------------------------------------------------------
void OnIpv6SlaacRaReceived(NETWORK_PORT_e portType, IPV6_LAN_CONFIG_t *ipv6AddrInfo);
//-------------------------------------------------------------------------------------------------
void OnIpv6SlaacRaUpdated(NETWORK_PORT_e portType, IPV6_LAN_CONFIG_t *ipv6AddrInfo);
//-------------------------------------------------------------------------------------------------
//#################################################################################################
// @END OF FILE
//#################################################################################################
#endif /* ETHERNET_H_ */
